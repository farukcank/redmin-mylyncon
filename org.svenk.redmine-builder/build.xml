<?xml version="1.0" encoding="UTF-8"?>
<project name="Redmine-Mylyn Build" default="main">
	<description>
            description
    </description>

	<taskdef resource="org/pluginbuilder/anttasks/pluginbuildertasks.properties" classpath="${buildHome}/build-files/lib/pluginbuilder-anttasks.jar" />

	<import file="${buildHome}/build-files/common.xml" />
	<property file="${buildHome}/build-files/build.properties" />

	<property name="updatesite" value="${buildDirectory}/updatesite" />
	<mkdir dir="${updatesite}"/>
	
	<target name="-prepare">
		<tstamp />

		<!-- determine buildfiles -->
		<BundleFileLocator eclipseInstallationRoot="${eclipseDir}" bundleId="org.eclipse.pde.build" filePath="scripts/build.xml" property="buildfile" />
		<!--
		<dirname file="${regularbuildfile}" property="scriptdir"/>
		<property name="productbuildfile" value="${scriptdir}/productBuild/productBuild.xml"/>
		-->
		
		<!-- determine launcher -->
		<BundleFileLocator eclipseInstallationRoot="${eclipseDir}" bundleId="org.eclipse.equinox.launcher" property="equinoxjar" />		

		<!-- init logging -->
		<property name="logDir" value="${buildDirectory}/logs"/>
		<mkdir dir="${logDir}"/>
		<record name="${logDir}/build.log"/>
		
		<!-- update sources -->
		<echo>"Updating sources ..."</echo>
		<exec executable="svn" output="${buildDirectory}/logs/svnupdate.log" >
			<arg value="update"/>
			<arg value="${buildHome}/svnfetch"/>
		</exec>
		
		<!-- svn reversion of this build -->
		<getbuildnr buildnrproperty="newsvnrevision" />
		<echo>"Software revision of this build: ${newsvnrevision}"</echo>
		
		<!--
		<propertyfile file="buildserver.properties">
			<entry key="lastbuildrevision" value="${newsvnrevision}"/>
		</propertyfile>
		-->
		
		<property name="forceContextQualifier" value="${buildType}${DSTAMP}${TSTAMP}-r${newsvnrevision}"/>
	</target>
	
	<target name="-checkforchanges">
		<property file="${logDir}/lastbuildrevision.log" />
		<echo>"Software revision of last build: ${lastsvnrevision}"</echo>
		
		<condition property="build.skip">
			<and>
				<isset property="lastsvnrevision"/>
				<equals arg1="${lastsvnrevision}" arg2="${newsvnrevision}" />
			</and>
		</condition>
	</target>
	
	<target name="-build" description="Call the Equinox Laucher" unless="build.skip">

		<java classname="org.eclipse.equinox.launcher.Main" fork="true" 
			failonerror="true" >
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${buildfile}" />
			<arg value="${buildTarget}" />
			<jvmarg value="-Dbuilder=${buildHome}/build-files" />
			<jvmarg value="-DjavacFailOnError=true"/>
			<jvmarg value="-DbuildDirectory=${buildDirectory}"/>
			<jvmarg value="-DbaseLocation=${eclipseDir}"/>
			<jvmarg value="-DbuildHome=${buildHome}"/>
			<jvmarg value="-DforceContextQualifier=${forceContextQualifier}"/>
			<jvmarg value="-DbuildProperties=${buildHome}/build-files/build.properties"/>
			<jvmarg value="-Dupdatesite=${updatesite}"/>
			<jvmarg value="-Dupdatesite=${updatesite}"/>
			<jvmarg value="-Dbuild.compiler=org.aspectj.tools.ant.taskdefs.Ajc11CompilerAdapter"/>
			<jvmarg value="-Dbuild.compiler.clean=anything"/>

			<classpath>
				<pathelement location="${equinoxjar}" />
			</classpath>

		</java>
	</target>

	<target name="main" description="Run the ..."  depends="-prepare, -checkforchanges" >
		<antcall target="-build" />
		<!--
		<antcall target="mailresult" />
		-->

	</target>


</project>
